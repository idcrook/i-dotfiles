# -*- python -*-
# Add auto-completion and a stored history file of commands to your Python
# interactive interpreter. Requires Python 2.0+, readline. Autocomplete is
# bound to the Esc key by default (you can change it - see readline docs).
#
# Store the file in ~/.pystartup, and set an environment variable to point
# to it:  "export PYTHONSTARTUP=$HOME/.pystartup" in bash.
#
# Note that PYTHONSTARTUP does *not* expand "~", so you have to put in the
# full path to your home directory.

# Updated / adapted from :
# https://nedbatchelder.com//blog/201904/startuppy.html
# Has to work on both 2.x and 3.x

# for auto-imported modules when you run python interactively, add them here

# import pprint
import sys

# pp = pprint.pprint


# A function for pasting code into the repl.
# Adapted from: https://mail.python.org/pipermail/python-list/2016-September/714384.html
def paste():
    import textwrap
    exec(textwrap.dedent(sys.stdin.read()), globals())


# Readline and history support
def hook_up_history():
    try:
        # Not sure why this module is missing in some places, but deal with it.
        import readline
    except ImportError:
        print("No readline, use ^H")
    else:
        import atexit
        import os
        import rlcompleter

        history_path = os.path.expanduser("~/.pyhistory{0}.py".format(
            sys.version_info[0]))

        def save_history(history_path=history_path):
            import readline
            readline.write_history_file(history_path)

        if os.path.exists(history_path):
            readline.read_history_file(history_path)

        atexit.register(save_history)

        # include custom key bindings
        readline.parse_and_bind('tab: complete')
        # # Use Control-Space, like eclipse, for completion
        # readline.parse_and_bind("\C-Space: complete")

        # p = os.path.join(os.path.expanduser("~"), "lib", "python")
        # sys.path.insert(0, p)


# Don't do history stuff if we are IPython, it has its own thing.
is_ipython = 'In' in globals()
if not is_ipython:
    hook_up_history()

# Get rid of globals we don't want.
del is_ipython, hook_up_history
